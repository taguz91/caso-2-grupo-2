-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE public.adjuntos (
  id_adjuntos integer NOT NULL,
  url "char",
  created_at time with time zone NOT NULL,
  update_at time with time zone NOT NULL,
  created_by bigint,
  update_by bigint,
  is_deleted boolean,
  ticket_id bigint NOT NULL
);

CREATE TABLE public.catalogo (
  catalogo_id integer NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  descripcion character varying(100) NOT NULL,
  tipo_servicio_id bigint NOT NULL,
  servicio_id bigint NOT NULL,
  PRIMARY KEY (catalogo_id)
);

CREATE TABLE public.categoria (
  categoria_id integer NOT NULL,
  nombre_categoria character varying(100) NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  PRIMARY KEY (categoria_id)
);

CREATE TABLE public.criticidad (
  criticidad_id integer NOT NULL,
  nombre character varying(255) NOT NULL,
  valor numeric(2, 2) NOT NULL,
  descripcion text NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  PRIMARY KEY (criticidad_id)
);

CREATE TABLE public.encuesta_satisfaccion (
  encuesta_satisfaccion_id integer NOT NULL,
  calificacion integer NOT NULL,
  comentario character varying(200) NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  is_deleted boolean,
  ticket_id integer NOT NULL,
  PRIMARY KEY (encuesta_satisfaccion_id)
);

CREATE TABLE public.historial (
  historial_id integer NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  accion character varying(100) NOT NULL,
  ticket_id bigint NOT NULL,
  PRIMARY KEY (historial_id)
);

CREATE TABLE public.medio_comunicacion (
  medio_id integer NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  descripcion character varying(100) NOT NULL,
  ticket_id bigint NOT NULL,
  PRIMARY KEY (medio_id)
);

CREATE TABLE public.parametros (
  parametros_id integer NOT NULL,
  type smallint NOT NULL,
  nombre character varying(255) NOT NULL,
  descripcion text NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  PRIMARY KEY (parametros_id)
);

CREATE TABLE public.persona (
  persona_id integer NOT NULL,
  nombres character varying(20) NOT NULL,
  cedula character varying(10),
  correo character varying(100),
  password character varying(50) NOT NULL,
  token character varying,
  telefono character varying(20),
  create_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by integer NOT NULL,
  updated_by integer NOT NULL,
  is_deleted boolean,
  rol_id integer NOT NULL,
  PRIMARY KEY (persona_id)
);

CREATE TABLE public.rol (
  rol_id integer NOT NULL,
  nombre character varying(20) NOT NULL,
  create_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by integer NOT NULL,
  updated_by integer NOT NULL,
  is_deleted boolean,
  PRIMARY KEY (rol_id)
);

CREATE TABLE public.servicio (
  servicio_id integer NOT NULL,
  nombre_servicio character varying(100) NOT NULL,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  categoria_id integer NOT NULL,
  PRIMARY KEY (servicio_id)
);

CREATE TABLE public.sla (
  id_sla integer NOT NULL,
  tiempo_resolucion time with time zone,
  tiempo_respuesta time with time zone,
  reglas_escala "char",
  criticidad_id bigint NOT NULL,
  impacto_id bigint NOT NULL,
  nivel_prioridad_id bigint NOT NULL,
  created_at time with time zone NOT NULL,
  update_at time with time zone NOT NULL,
  created_by bigint,
  update_by bigint,
  is_deleted bigint,
  catalogo_id bigint NOT NULL
);

CREATE TABLE public.ticket (
  ticket_id integer NOT NULL,
  titulo character varying(255) NOT NULL,
  descripcion text NOT NULL,
  persona_id bigint NOT NULL,
  estado_id bigint NOT NULL,
  catalogo_id bigint NOT NULL,
  impacto_id bigint NOT NULL,
  responsable_id bigint NOT NULL,
  responsable_solucion_id bigint NOT NULL,
  fecha_solucion timestamp without time zone,
  solucion text,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  created_by bigint,
  updated_by bigint,
  is_deleted boolean,
  PRIMARY KEY (ticket_id)
);

ALTER TABLE
  public.adjuntos
ADD
  FOREIGN KEY (ticket_id) REFERENCES public.ticket (ticket_id) NOT VALID;

ALTER TABLE
  public.catalogo
ADD
  FOREIGN KEY (tipo_servicio_id) REFERENCES public.parametros (parametros_id) NOT VALID;

ALTER TABLE
  public.catalogo
ADD
  FOREIGN KEY (servicio_id) REFERENCES public.servicio (servicio_id) NOT VALID;

ALTER TABLE
  public.encuesta_satisfaccion
ADD
  FOREIGN KEY (ticket_id) REFERENCES public.ticket (ticket_id) NOT VALID;

ALTER TABLE
  public.historial
ADD
  FOREIGN KEY (ticket_id) REFERENCES public.ticket (ticket_id) NOT VALID;

ALTER TABLE
  public.medio_comunicacion
ADD
  FOREIGN KEY (ticket_id) REFERENCES public.ticket (ticket_id) NOT VALID;

ALTER TABLE
  public.persona
ADD
  FOREIGN KEY (rol_id) REFERENCES public.rol (rol_id) NOT VALID;

ALTER TABLE
  public.servicio
ADD
  FOREIGN KEY (categoria_id) REFERENCES public.categoria (categoria_id) NOT VALID;

ALTER TABLE
  public.sla
ADD
  FOREIGN KEY (criticidad_id) REFERENCES public.criticidad (criticidad_id) NOT VALID;

ALTER TABLE
  public.sla
ADD
  FOREIGN KEY (catalogo_id) REFERENCES public.catalogo (catalogo_id) NOT VALID;

ALTER TABLE
  public.ticket
ADD
  FOREIGN KEY (catalogo_id) REFERENCES public.catalogo (catalogo_id) NOT VALID;

ALTER TABLE
  public.ticket
ADD
  FOREIGN KEY (estado_id) REFERENCES public.parametros (parametros_id) NOT VALID;

ALTER TABLE
  public.ticket
ADD
  FOREIGN KEY (impacto_id) REFERENCES public.parametros (parametros_id) NOT VALID;

ALTER TABLE
  public.ticket
ADD
  FOREIGN KEY (persona_id) REFERENCES public.persona (persona_id) NOT VALID;

END;